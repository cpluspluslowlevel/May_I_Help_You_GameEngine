cmake_minimum_required(VERSION 3.20)
project(${MIHYPLATFORM_PROJECT_NAME})

set(MIHYPLATFORM_CODE_PUBLIC_DIRECTORY ${MIHYPLATFORM_CODE_DIRECTORY}/Public)
if(WIN32)
    set(MIHYPLATFORM_CODE_PRIVATE_DIRECTORY ${MIHYPLATFORM_CODE_DIRECTORY}/Private/Windows)
    
#elseif(UNIX)           플랫폼에 따른 분기를 작성.
    #set(MIHYPLATFORM_CODE_PRIVATE_DIRECTORY ${MIHYPLATFORM_CODE_DIRECTORY}/Private/Linux)
endif()

# Print log
message(STATUS "---------------------------------------------------")
message(STATUS "LIST_DIRECTORY: ${CMAKE_CURRENT_LIST_DIR}")
message(STATUS "SOURCE_DIRECTORY: ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "BINARY_DIRECTORY: ${CMAKE_CURRENT_BINARY_DIR}")
message(STATUS "MIHYPLATFORM_CODE_DIRECTORY: ${MIHYPLATFORM_CODE_DIRECTORY}")
message(STATUS "MIHYPLATFORM_CODE_PUBLIC_DIRECTORY: ${MIHYPLATFORM_CODE_PUBLIC_DIRECTORY}")
message(STATUS "MIHYPLATFORM_CODE_PRIVATE_DIRECTORY: ${MIHYPLATFORM_CODE_PRIVATE_DIRECTORY}")
message(STATUS "---------------------------------------------------")

file(GLOB_RECURSE MIHY_SOURCES  "${MIHYPLATFORM_CODE_PUBLIC_DIRECTORY}/*.cpp"
                                "${MIHYPLATFORM_CODE_PUBLIC_DIRECTORY}/*ixx")

file(GLOB_RECURSE MIHY_SOURCES  "${MIHYPLATFORM_CODE_PRIVATE_DIRECTORY}/*.cpp"
                                "${MIHYPLATFORM_CODE_PRIVATE_DIRECTORY}/*ixx")

                                
add_library(${MIHYPLATFORM_PROJECT_NAME} SHARED ${MIHY_SOURCES})
